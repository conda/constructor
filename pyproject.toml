[build-system]
requires = ["setuptools>=70.1", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "constructor"
description = "create installer from conda packages"
readme = "README.md"
license = {text = "BSD-3-Clause"}
requires-python = ">=3.8"
dynamic = [
    "version",
]
dependencies = [
    "conda >=4.6",
    "ruamel.yaml >=0.11.14,<0.19",
    "pillow >=3.1 ; platform_system=='Windows' or platform_system=='Darwin'",
    "jinja2",
]

[project.scripts]
constructor = "constructor.main:main"

[project.urls]
repository = "https://github.com/conda/constructor"

[tool.setuptools_scm]
write_to = "constructor/_version.py"

[tool.setuptools.packages.find]
where = ["."]
include = ["constructor*"]
namespaces = true

[tool.setuptools.package-data]
constructor = [
    "header.sh",
    "nsis/*",
    "osx/*",
    "ttf/*",
]

[tool.ruff]
line-length = 100
target-version = "py39"
exclude = [
  "constructor/nsis/*.py",
]

[tool.ruff.lint]
extend-per-file-ignores = {"docs/*" = ["D1"], "tests/*" = ["D1"]}
flake8-type-checking = {exempt-modules = [], strict = true}
ignore = [
  "D101",  # Missing docstring in public class
  "D102",  # Missing docstring in public method
  "D103",  # Missing docstring in public function
  "D104",  # Missing docstring in public package
  "D105",  # Missing docstring in magic method
  "D107",  # Missing docstring in `__init__`
  "E402",  # module level import not at top of file
  "E501",  # line too long
  "E722",  # do not use bare 'except'
  "E731",  # do not assign a lambda expression, use a def
  "UP031",  # do not fix printf-style string formatting
]
pydocstyle = {convention = "pep257"}
# see https://docs.astral.sh/ruff/rules/
select = [
  "D1",  # pydocstyle
  "E",  # pycodestyle errors
  "F",  # pyflakes
  "FA",  # flake8-future-annotations
  "I",  # isort
  "ISC",  # flake8-implicit-str-concat
  "RUF100",  # Unused noqa directive
  "T10",  # flake8-debugger
  "TCH",  # flake8-type-checking
  "UP",  # pyupgrade
  "W",  # pycodestyle warnings
]

[tool.pytest.ini_options]
markers = [
    "examples",
]
